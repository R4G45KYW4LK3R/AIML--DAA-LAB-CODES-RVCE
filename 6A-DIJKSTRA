#include <stdio.h>

#define INFINITY 999

void dijkstra(int n, int cost[n][n], int source, int visited[n], int distance[n]) {
    visited[source] = 1;
    int min_dist, next_node;
    for (int count = 1; count < n; count++) {
        min_dist = INFINITY;
        for (int i = 0; i < n; i++) 
            if (!visited[i] && distance[i] < min_dist) {
                min_dist = distance[i];
                next_node = i;
            }
        visited[next_node] = 1;
        for (int i = 0; i < n; i++) {
            if (!visited[i] && (min_dist + cost[next_node][i] < distance[i]))
                distance[i] = min_dist + cost[next_node][i];
        }
    }
}

int main(void) {
    int n;
    printf("Enter the number of nodes: ");
    scanf("%d", &n);

    int cost[n][n];
    printf("Enter the cost matrix (use %d for INFINITY):\n", INFINITY);
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            scanf("%d", &cost[i][j]);
        }
    }
    
    int source;
    printf("Enter the source node: ");
    scanf("%d", &source);

    int visited[n], distance[n];
    for (int i = 0; i < n; i++) {
        visited[i] = 0;
        distance[i] = cost[source][i];
    }

    dijkstra(n, cost, source, visited, distance);

    printf("Shortest distances from source node %d:\n", source);
    for (int i = 0; i < n; i++) {
        printf("%d --> %d = %d\n", source, i, distance[i]);
    }

    return 0;
}

/* SAMPLE INPUT 

Enter the number of nodes: 4
Enter the cost matrix (use 999 for INFINITY):
0 5 999 10
5 0 3 999
999 3 0 1
10 999 1 0
Enter the source node: 0 */
